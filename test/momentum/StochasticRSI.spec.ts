import assert from "assert";
import { StochasticRSI, StochasticRSIOutput } from "../../src";

let expectResult = [
  { sk: undefined, sd: undefined, stochasticRSI: 0 },
  { sk: undefined, sd: undefined, stochasticRSI: 100 },
  { sk: undefined, sd: undefined, stochasticRSI: 0 },
  { sk: undefined, sd: undefined, stochasticRSI: 0 },
  { sk: 20, sd: undefined, stochasticRSI: 0 },
  { sk: 28.65, sd: undefined, stochasticRSI: 45.94 },
  { sk: 49.24, sd: 32.63, stochasticRSI: 90.42 },
  { sk: 56.49, sd: 44.56, stochasticRSI: 71 },
  { sk: 70.99, sd: 57.78, stochasticRSI: 100 },
  { sk: 78.51, sd: 68.14, stochasticRSI: 93.54 },
  { sk: 65.18, sd: 66.66, stochasticRSI: 38.54 },
  { sk: 71.45, sd: 69.06, stochasticRSI: 83.99 },
  { sk: 75.08, sd: 72.07, stochasticRSI: 82.33 },
  { sk: 83.39, sd: 77.73, stochasticRSI: 100 },
  { sk: 88.92, sd: 83.33, stochasticRSI: 100 },
  { sk: 92.62, sd: 87.97, stochasticRSI: 100 },
  { sk: 88.17, sd: 88.07, stochasticRSI: 79.27 },
  { sk: 84, sd: 86.03, stochasticRSI: 75.65 },
  { sk: 84.42, sd: 85.23, stochasticRSI: 85.27 },
  { sk: 87.85, sd: 86.54, stochasticRSI: 94.72 },
  { sk: 91.1, sd: 88.82, stochasticRSI: 97.58 },
  { sk: 94.06, sd: 91.44, stochasticRSI: 100 },
  { sk: 92.34, sd: 91.89, stochasticRSI: 88.89 },
  { sk: 94.89, sd: 93.39, stochasticRSI: 100 },
  { sk: 96.6, sd: 94.99, stochasticRSI: 100 },
  { sk: 97.73, sd: 96.36, stochasticRSI: 100 },
  { sk: 98.49, sd: 97.42, stochasticRSI: 100 },
  { sk: 91.65, sd: 94.54, stochasticRSI: 77.98 },
  { sk: 91.48, sd: 93.01, stochasticRSI: 91.13 },
  { sk: 82.71, sd: 87.86, stochasticRSI: 65.18 },
  { sk: 74.34, sd: 81.1, stochasticRSI: 57.59 },
  { sk: 64.37, sd: 72.73, stochasticRSI: 44.42 },
  { sk: 65.3, sd: 69.02, stochasticRSI: 67.16 },
  { sk: 65.16, sd: 67.09, stochasticRSI: 64.89 },
  { sk: 43.44, sd: 55.26, stochasticRSI: 0 },
  { sk: 28.96, sd: 42.11, stochasticRSI: 0 },
  { sk: 20.38, sd: 31.25, stochasticRSI: 3.226 },
  { sk: 15.82, sd: 23.53, stochasticRSI: 6.694 },
  { sk: 19.09, sd: 21.31, stochasticRSI: 25.65 },
  { sk: 25.42, sd: 23.37, stochasticRSI: 38.06 },
  { sk: 32.66, sd: 28.01, stochasticRSI: 47.14 },
  { sk: 55.11, sd: 41.56, stochasticRSI: 100 },
  { sk: 62.63, sd: 52.1, stochasticRSI: 77.69 },
  { sk: 65.18, sd: 58.64, stochasticRSI: 70.27 },
  { sk: 62.78, sd: 60.71, stochasticRSI: 57.99 },
  { sk: 66.39, sd: 63.55, stochasticRSI: 73.61 },
  { sk: 62, sd: 62.78, stochasticRSI: 53.22 },
  { sk: 54.47, sd: 58.62, stochasticRSI: 39.4 },
  { sk: 49.64, sd: 54.13, stochasticRSI: 39.99 },
  { sk: 49.17, sd: 51.65, stochasticRSI: 48.22 },
  { sk: 45.28, sd: 48.47, stochasticRSI: 37.52 },
  { sk: 42.11, sd: 45.29, stochasticRSI: 35.76 },
  { sk: 36.81, sd: 41.05, stochasticRSI: 26.2 },
  { sk: 28.74, sd: 34.89, stochasticRSI: 12.61 },
  { sk: 26.44, sd: 30.67, stochasticRSI: 21.83 },
  { sk: 21.89, sd: 26.28, stochasticRSI: 12.79 },
  { sk: 15.37, sd: 20.83, stochasticRSI: 2.348 },
  { sk: 10.25, sd: 15.54, stochasticRSI: 0 },
  { sk: 9.733, sd: 12.64, stochasticRSI: 8.698 },
  { sk: 6.488, sd: 9.562, stochasticRSI: 0 },
  { sk: 9.715, sd: 9.639, stochasticRSI: 16.17 },
  { sk: 10.23, sd: 9.935, stochasticRSI: 11.27 },
  { sk: 12.59, sd: 11.26, stochasticRSI: 17.3 },
  { sk: 11.86, sd: 11.56, stochasticRSI: 10.41 },
  { sk: 7.906, sd: 9.733, stochasticRSI: 0 },
  { sk: 6.772, sd: 8.253, stochasticRSI: 4.505 },
  { sk: 6.633, sd: 7.443, stochasticRSI: 6.354 },
  { sk: 4.422, sd: 5.932, stochasticRSI: 0 },
  { sk: 15.42, sd: 10.68, stochasticRSI: 37.43 },
  { sk: 26.82, sd: 18.75, stochasticRSI: 49.61 },
  { sk: 23.9, sd: 21.32, stochasticRSI: 18.05 },
  { sk: 33.45, sd: 27.39, stochasticRSI: 52.56 },
  { sk: 43.99, sd: 35.69, stochasticRSI: 65.07 },
  { sk: 51.35, sd: 43.52, stochasticRSI: 66.08 },
  { sk: 47.89, sd: 45.71, stochasticRSI: 40.97 },
  { sk: 40.85, sd: 43.28, stochasticRSI: 26.77 },
  { sk: 54.23, sd: 48.76, stochasticRSI: 80.99 },
  { sk: 60.41, sd: 54.58, stochasticRSI: 72.77 },
  { sk: 50.7, sd: 52.64, stochasticRSI: 31.29 },
  { sk: 60.21, sd: 56.42, stochasticRSI: 79.21 },
  { sk: 73.47, sd: 64.95, stochasticRSI: 100 },
  { sk: 82.31, sd: 73.63, stochasticRSI: 100 },
  { sk: 78.84, sd: 76.23, stochasticRSI: 71.89 },
  { sk: 85.89, sd: 81.06, stochasticRSI: 100 },
  { sk: 83.11, sd: 82.09, stochasticRSI: 77.56 },
  { sk: 88.74, sd: 85.42, stochasticRSI: 100 },
  { sk: 92.03, sd: 88.72, stochasticRSI: 98.59 },
  { sk: 94.68, sd: 91.7, stochasticRSI: 100 },
  { sk: 94.44, sd: 93.07, stochasticRSI: 93.96 },
  { sk: 89.39, sd: 91.23, stochasticRSI: 79.29 },
  { sk: 82.44, sd: 86.83, stochasticRSI: 68.53 },
  { sk: 81.28, sd: 84.06, stochasticRSI: 78.96 },
  { sk: 75.38, sd: 79.72, stochasticRSI: 63.58 },
  { sk: 65.02, sd: 72.37, stochasticRSI: 44.31 },
  { sk: 55.36, sd: 63.87, stochasticRSI: 36.03 },
  { sk: 48.09, sd: 55.98, stochasticRSI: 33.56 },
  { sk: 40.8, sd: 48.39, stochasticRSI: 26.21 },
  { sk: 36.44, sd: 42.42, stochasticRSI: 27.73 },
  { sk: 31.08, sd: 36.75, stochasticRSI: 20.36 },
  { sk: 28.69, sd: 32.72, stochasticRSI: 23.92 },
  { sk: 19.13, sd: 25.92, stochasticRSI: 0 },
  { sk: 12.75, sd: 19.34, stochasticRSI: 0 },
  { sk: 8.501, sd: 13.92, stochasticRSI: 0 },
  { sk: 11.2, sd: 12.56, stochasticRSI: 16.58 },
  { sk: 10.44, sd: 11.5, stochasticRSI: 8.93 },
  { sk: 10.74, sd: 11.12, stochasticRSI: 11.35 },
  { sk: 11.66, sd: 11.39, stochasticRSI: 13.49 },
  { sk: 15.66, sd: 13.53, stochasticRSI: 23.67 },
  { sk: 19.45, sd: 16.49, stochasticRSI: 27.04 },
  { sk: 15.92, sd: 16.2, stochasticRSI: 8.859 },
  { sk: 10.61, sd: 13.41, stochasticRSI: 0 },
  { sk: 9.505, sd: 11.46, stochasticRSI: 7.287 },
  { sk: 6.337, sd: 8.897, stochasticRSI: 0 },
  { sk: 4.224, sd: 6.561, stochasticRSI: 0 },
  { sk: 2.816, sd: 4.689, stochasticRSI: 0 },
  { sk: 1.878, sd: 3.283, stochasticRSI: 0 },
  { sk: 1.252, sd: 2.267, stochasticRSI: 0 },
  { sk: 9.79, sd: 6.029, stochasticRSI: 26.87 },
  { sk: 17.93, sd: 11.98, stochasticRSI: 34.21 },
  { sk: 24, sd: 17.99, stochasticRSI: 36.14 },
  { sk: 25.57, sd: 21.78, stochasticRSI: 28.72 },
  { sk: 24.65, sd: 23.22, stochasticRSI: 22.8 },
  { sk: 20.87, sd: 22.05, stochasticRSI: 13.32 },
  { sk: 16.02, sd: 19.03, stochasticRSI: 6.299 },
  { sk: 12, sd: 15.52, stochasticRSI: 3.969 },
  { sk: 8, sd: 11.76, stochasticRSI: 0 },
  { sk: 9.285, sd: 10.52, stochasticRSI: 11.85 },
  { sk: 24.05, sd: 17.29, stochasticRSI: 53.58 },
  { sk: 31.2, sd: 24.25, stochasticRSI: 45.51 },
  { sk: 44.55, sd: 34.4, stochasticRSI: 71.23 },
  { sk: 50.65, sd: 42.52, stochasticRSI: 62.86 },
  { sk: 59.75, sd: 51.14, stochasticRSI: 77.96 },
  { sk: 68.83, sd: 59.98, stochasticRSI: 86.99 },
  { sk: 79.22, sd: 69.6, stochasticRSI: 100 },
  { sk: 80.18, sd: 74.89, stochasticRSI: 82.09 },
  { sk: 82.72, sd: 78.81, stochasticRSI: 87.81 },
  { sk: 88.48, sd: 83.64, stochasticRSI: 100 },
  { sk: 86.97, sd: 85.31, stochasticRSI: 83.94 },
  { sk: 90.27, sd: 87.79, stochasticRSI: 96.87 },
  { sk: 86.81, sd: 87.3, stochasticRSI: 79.9 },
  { sk: 91.21, sd: 89.25, stochasticRSI: 100 },
  { sk: 92.93, sd: 91.09, stochasticRSI: 96.36 },
  { sk: 95.28, sd: 93.19, stochasticRSI: 100 },
  { sk: 94.81, sd: 94, stochasticRSI: 93.87 },
];

let input = {
  values: [
    65112.6, 65072.5, 65100.5, 65171.5, 65170.9, 65100.3, 65087.3, 65113.4,
    65103.4, 65125.4, 65162.6, 65111.7, 65160, 65166.1, 65152.5, 65156, 65108.8,
    65094.2, 65059.9, 65100.4, 65145.1, 65127.1, 65220, 65211.5, 65128.6,
    65218.8, 65216.2, 65278.5, 65288.1, 65323.4, 65286.6, 65280.1, 65306,
    65332.3, 65340.3, 65386.4, 65368, 65424.6, 65478.9, 65488.1, 65539, 65501.9,
    65562.7, 65514, 65499, 65509.5, 65573.1, 65580.3, 65465, 65420.2, 65429.1,
    65438.1, 65490.5, 65528.7, 65558.4, 65908.5, 65844.5, 65822.5, 65786.1,
    65894, 65829.5, 65782.9, 65786.2, 65831.4, 65798.4, 65793.1, 65764.9,
    65723.3, 65759.6, 65732.8, 65710.1, 65648.2, 65679.9, 65624.4, 65687.6,
    65668.2, 65679, 65657.2, 65614.9, 65626.7, 65628.1, 65607.4, 65679, 65705.4,
    65636, 65698.4, 65703.2, 65697.2, 65666.5, 65641.9, 65692.3, 65684.9,
    65646.4, 65691.4, 65728.6, 65786.1, 65746.7, 65850, 65810, 66192.6, 66187.5,
    66412.4, 66387.8, 66327, 66280.6, 66400.1, 66330, 66233.1, 66188.4, 66175.2,
    66140.1, 66150, 66114.1, 66205.6, 66082.9, 65994.1, 65918.6, 66029, 65970.5,
    65986.6, 66000.1, 66065.9, 66078.6, 65959.9, 65842.8, 65880.6, 65749.3,
    65547.6, 65436, 65340.2, 65137.9, 65315.4, 65369.6, 65383.4, 65201.3,
    65118.8, 64971.8, 64848.1, 64804.9, 64716, 64778.2, 65037.4, 64937.5, 65008,
    64850, 64922.6, 64867, 64933.3, 64816.1, 64837.7, 64959.9, 64847.8, 64909.5,
    64789.7, 64898.5, 64874.1, 65047.3, 65000,
  ],
  rsiPeriod: 14,
  stochasticPeriod: 21,
  kPeriod: 5,
  dPeriod: 3,
};

describe("StochasticRSI", function () {
  "use strict";
  it("should calculate StochasticRSI using the calculate method", function () {
    assert.deepEqual(
      StochasticRSI.calculate(input),
      expectResult,
      "Wrong Results"
    );
  });

  it("should be able to calculate StochasticRSI by using getResult", function () {
    let stochastic = new StochasticRSI(input);
    assert.deepEqual(
      stochastic.getResult(),
      expectResult,
      "Wrong Results while calculating next bar"
    );
  });

  it("should be able to get StochasticRSI for the next bar using nextValue", function () {
    let stochastic = new StochasticRSI({ ...input, values: [] });
    let results: Array<StochasticRSIOutput> = [];
    input.values.forEach((price, index) => {
      const result = stochastic.nextValue(price);
      if (result) results.push(result);
    });
    assert.deepEqual(
      results,
      expectResult,
      "Wrong Results while getting results"
    );
  });
});
